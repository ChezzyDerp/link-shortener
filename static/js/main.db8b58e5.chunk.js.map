{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["userLink","React","createRef","App","useState","shortLink","setShortLink","class","ref","type","name","onClickCapture","data","console","log","xhr","XMLHttpRequest","withCredentials","addEventListener","this","readyState","DONE","responseText","niceResult","JSON","parse","open","setRequestHeader","send","makeShortLink","current","value","navigator","clipboard","writeText","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIIA,EAAWC,IAAMC,YAsDNC,EAnDH,WAEV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KA2BA,OAGE,sBAAKC,MAAM,UAAX,UAEE,oBAAIA,MAAM,iBAAV,uBACA,uBAAOC,IAAKR,EAAUO,MAAM,gBAAgBE,KAAK,OAAOC,KAAK,KAC7D,wBAAQC,eAAkB,YAhCR,SAACC,GACrBC,QAAQC,IAAIF,GACZ,IAAMG,EAAM,IAAIC,eAChBD,EAAIE,iBAAkB,EAEtBF,EAAIG,iBAAiB,oBAAoB,WACvC,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjCR,QAAQC,IAAIK,KAAKG,cACjB,IAAIC,EAAaC,KAAKC,MAAMN,KAAKG,cAAhB,WAEjBhB,EAAaiB,OAIjBR,EAAIW,KAAK,OAAQ,wDACjBX,EAAIY,iBAAiB,eAAgB,qCACrCZ,EAAIY,iBAAiB,iBAAkB,sDACvCZ,EAAIY,iBAAiB,kBAAmB,wCAExCZ,EAAIa,KAAKhB,GAcLiB,CAAc,OAAQ7B,EAAS8B,QAAQC,QACtCxB,MAAM,YAFT,oBAGA,oBAAIA,MAAM,mBAAV,uBACA,uBAAOI,eAAgB,WACrBqB,UAAUC,UAAUC,UAAU7B,GAC9B8B,MAAM,+BACLJ,MAAO1B,EAAWI,KAAK,OAAOC,KAAK,SCtC7B0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.db8b58e5.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nlet userLink = React.createRef()\n\n\nconst App = () => {\n\n  const [shortLink, setShortLink] = useState('');\n\n  const makeShortLink = (data) =>{\n    console.log(data)\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n  \n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === this.DONE) {\n        console.log(this.responseText);\n        let niceResult = JSON.parse(this.responseText)['result_url']\n        \n        setShortLink(niceResult)\n      }\n    });\n  \n    xhr.open(\"POST\", \"https://url-shortener-service.p.rapidapi.com/shorten\");\n    xhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n    xhr.setRequestHeader(\"x-rapidapi-key\", \"f1d56c1329msh22b5b0eb0c89c1cp1d6911jsnc6b2ba389e91\");\n    xhr.setRequestHeader(\"x-rapidapi-host\", \"url-shortener-service.p.rapidapi.com\");\n  \n    xhr.send(data);\n  \n   \n  \n  }\n  \n  return (\n\n\n    <div class=\"wrapper\">\n\n      <h1 class='userLinkHeader'>YOUR LINK</h1>\n      <input ref={userLink} class=\"inputUserLink\" type=\"text\" name=\"\"></input>\n      <button onClickCapture= { () =>{\n        makeShortLink(`url=`+ userLink.current.value )\n      }} class=\"shourtBtn\">SHRINK</button>\n      <h2 class=\"shourtLinkHeader\">SHRT LINK</h2>\n      <input onClickCapture={() =>{\n        navigator.clipboard.writeText(shortLink)\n        alert('Link was copy in clipboard')\n      }} value={shortLink} type=\"text\" name=\"\"></input>\n    </div>\n\n  )\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}